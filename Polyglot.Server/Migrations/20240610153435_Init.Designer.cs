// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Polyglot.Server.Infrastructure;

#nullable disable

namespace Polyglot.Server.Migrations
{
    [DbContext(typeof(PolyglotDbContext))]
    [Migration("20240610153435_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Polyglot.Server.models.WordItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("NeedToBeStudied")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WordItems");
                });

            modelBuilder.Entity("Polyglot.Server.models.WordItem", b =>
                {
                    b.OwnsOne("Polyglot.Server.models.Word", "Word", b1 =>
                        {
                            b1.Property<int>("WordItemId")
                                .HasColumnType("int");

                            b1.Property<int>("Language")
                                .HasColumnType("int");

                            b1.Property<string>("PolishTranslation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Translation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WordItemId");

                            b1.ToTable("WordItems");

                            b1.WithOwner()
                                .HasForeignKey("WordItemId");
                        });

                    b.Navigation("Word")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
